from openai import OpenAI
import os

class ChatGPT:
    def __init__(self, api_key: str, model: str = "gpt-3.5-turbo"):
        """
        Initialize the ChatGPT instance with the given API key and model.
        """
        self.api_key = api_key
        self.model = model
        self.client = OpenAI(api_key=self.api_key)

    def generate_response(self, prompt: str, max_tokens: int = 150):
        """
        Generate a response from ChatGPT based on the given prompt.

        Args:
            prompt (str): The input prompt to send to the model.
            max_tokens (int): The maximum number of tokens for the response.

        Returns:
            str: The response generated by ChatGPT.
        """
        try:
            response = self.client.chat.completions.create(
                model=self.model,
                messages=[{"role": "assistant", "content": prompt}],
                max_tokens=max_tokens
            )
            response = response.model_dump()
            return response['choices'][0]['message']['content'].strip()
        except Exception as e:
            return f"Error: {str(e)}"

    def set_model(self, model: str):
        """
        Set a different GPT model for generating responses.

        Args:
            model (str): The name of the model to use.
        """
        self.model = model

    def __repr__(self):
        return f"ChatGPT(model={self.model})"


if __name__ == "__main__":
    chatgpt = ChatGPT(os.getenv("CHATGPT_API_KEY"))

    print(chatgpt.generate_response("write me a story"))